{"version":3,"sources":["webpack:///./src/views/level2.vue?5999","webpack:///./src/components/ImprovedTemperatureHeatMap.vue?182f","webpack:///src/components/ImprovedTemperatureHeatMap.vue","webpack:///./src/components/ImprovedTemperatureHeatMap.vue?b9e5","webpack:///./src/components/ImprovedTemperatureHeatMap.vue","webpack:///src/views/level2.vue","webpack:///./src/views/level2.vue?c5f9","webpack:///./src/views/level2.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","row","wrap","xs12","pa-1","color","light","_v","staticClass","_s","file","append-icon","label","single-line","hide-details","outline","model","value","callback","$$v","search","expression","headers","items","rawData","scopedSlots","_u","key","fn","props","item","date","max_temperature","min_temperature","displayProperty","startYear","endYear","sm5","md4","type","min","step","max","input","$set","xs6","sm2","md3","on","click","changeYearRange","$event","changeDisplayProperty","ref","display-property","height","container","width","staticRenderFns","ImprovedTemperatureHeatMapvue_type_template_id_f4646330_render","staticStyle","overflow","ImprovedTemperatureHeatMapvue_type_template_id_f4646330_staticRenderFns","ImprovedTemperatureHeatMapvue_type_script_lang_js_","name","data","processedData","groupedData","Array","required","Number","String","default","margin","Object","top","right","bottom","left","watch","draw","mounted","methods","validProps","length","_this","d3","lodash","$el","innerWidth","innerHeight","JSON","parse","stringify_default","firstChild","removeChild","svg","select","append","attr","months","sortedRawData","orderBy","chain","groupBy","d","split","map","val","Math","apply","el","years","i","push","toString","x","scaleBand","range","domain","padding","call","axisTop","y","axisLeft","colors","temperatureRange","colorScale","scaleQuantize","remove","tip","html","dataToDraw","filter","parse_int_default","vm","selectAll","enter","bandwidth","style","show","hide","legendSquareLength","tempRange","slice","unshift","colorRange","x2","y2","maxTempLine","line","numOfDays","minTempLine","coordinate","components_ImprovedTemperatureHeatMapvue_type_script_lang_js_","component","componentNormalizer","ImprovedTemperatureHeatMap","level2vue_type_script_lang_js_","components","text","align","resizeID","_mounted","asyncToGenerator","regeneratorRuntime","mark","_callee","_context","prev","next","csv","sent","window","addEventListener","onResize","initContainerSize","stop","arguments","beforeDestroy","removeEventListener","e","clearTimeout","setTimeout","$refs","heatMapContainer2","clientWidth","views_level2vue_type_script_lang_js_","level2_component","__webpack_exports__","installComponents_default","VBtn","VCard","VCardActions","components_VCard","VCardText","VCardTitle","VDataTable","VFlex","VLabel","VLayout","VSpacer","VGrid","VTextField","VToolbar","VToolbarTitle","components_VToolbar"],"mappings":"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","file":"js/chunk-2d0ab439.668e8f68.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\",\"pa-1\":\"\"}},[_c('v-toolbar',{attrs:{\"color\":\"white\",\"light\":\"\"}},[_c('v-toolbar-title',[_vm._v(\"Level 2 Challenge: Improvement of the Year/Month Heatmap\")]),_c('v-spacer')],1)],1),_c('v-flex',{attrs:{\"xs12\":\"\",\"pa-1\":\"\"}},[_c('v-card',[_c('v-card-title',[_c('span',{staticClass:\"title\"},[_vm._v(\"Input Data: \"+_vm._s(_vm.file))])]),_c('v-card-text',[_c('v-text-field',{attrs:{\"append-icon\":\"search\",\"label\":\"Search\",\"single-line\":\"\",\"hide-details\":\"\",\"outline\":\"\"},model:{value:(_vm.search),callback:function ($$v) {_vm.search=$$v},expression:\"search\"}}),_c('v-data-table',{attrs:{\"headers\":_vm.headers,\"items\":_vm.rawData,\"search\":_vm.search},scopedSlots:_vm._u([{key:\"items\",fn:function(props){return [_c('td',{staticClass:\"text-xs-center\"},[_vm._v(_vm._s(props.item.date))]),_c('td',{staticClass:\"text-xs-center\"},[_vm._v(_vm._s(props.item.max_temperature))]),_c('td',{staticClass:\"text-xs-center\"},[_vm._v(_vm._s(props.item.min_temperature))])]}}])})],1)],1)],1),_c('v-flex',{attrs:{\"xs12\":\"\",\"pa-1\":\"\"}},[_c('v-card',[_c('v-card-title',[_c('div',[_c('h3',{staticClass:\"title mb-0\"},[_vm._v(\"Year/Month Heatmap\")]),_c('v-label',[_vm._v(\"Display Value: \"+_vm._s(_vm.displayProperty))]),_c('br'),_c('v-label',[_vm._v(\"Year Range: \"+_vm._s(_vm.startYear)+\" - \"+_vm._s(_vm.endYear))]),_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\",\"sm5\":\"\",\"md4\":\"\",\"pa-1\":\"\"}},[_c('v-text-field',{attrs:{\"label\":\"Start Year\",\"outline\":\"\",\"type\":\"number\",\"min\":\"1900\",\"step\":\"1\",\"max\":\"2100\"},model:{value:(_vm.input.startYear),callback:function ($$v) {_vm.$set(_vm.input, \"startYear\", $$v)},expression:\"input.startYear\"}})],1),_c('v-flex',{attrs:{\"xs12\":\"\",\"sm5\":\"\",\"md4\":\"\",\"pa-1\":\"\"}},[_c('v-text-field',{attrs:{\"label\":\"End Year\",\"outline\":\"\",\"type\":\"number\",\"min\":\"1900\",\"step\":\"1\",\"max\":\"2100\"},model:{value:(_vm.input.endYear),callback:function ($$v) {_vm.$set(_vm.input, \"endYear\", $$v)},expression:\"input.endYear\"}})],1),_c('v-flex',{attrs:{\"xs6\":\"\",\"sm2\":\"\",\"md3\":\"\",\"pa-1\":\"\"}},[_c('v-btn',{on:{\"click\":_vm.changeYearRange}},[_vm._v(\"\\n                                Apply\\n                            \")])],1)],1)],1)]),_c('v-card-actions',[_c('v-btn',{attrs:{\"color\":\"error\"},on:{\"click\":function($event){return _vm.changeDisplayProperty('max_temperature')}}},[_vm._v(\"MAX Temperature\")]),_c('v-btn',{attrs:{\"color\":\"primary\"},on:{\"click\":function($event){return _vm.changeDisplayProperty('min_temperature')}}},[_vm._v(\"MIN Temperature\")])],1),_c('v-card-text',{ref:\"heatMapContainer2\"},[_c('improved-temperature-heat-map',{attrs:{\"rawData\":_vm.rawData,\"display-property\":_vm.displayProperty,\"startYear\":_vm.startYear,\"endYear\":_vm.endYear,\"height\":_vm.container.height,\"width\":_vm.container.width}})],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"overflow\":\"scroll\"}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div style=\"overflow: scroll;\"></div>\n</template>\n\n\n<script>\n\n    export default {\n        name: \"ImprovedTemperatureHeatMap\",\n        data: () => {\n            return {\n                processedData: null,\n                groupedData: null\n            }\n        },\n        props: {\n\n            rawData: {\n                type: Array,\n                required: true\n            },\n            startYear: {\n                type: Number,\n                required: true\n            },\n            endYear: {\n                type: Number,\n                required: true\n            },\n            displayProperty: {\n                type: String,\n                required: true\n            },\n            width: {\n                type: Number,\n                default: () => {\n                    return 500\n                }\n            },\n            height: {\n                type: Number,\n                default: () => {\n                    return 500\n                }\n            },\n            margin: {\n                type: Object,\n                default: () => {\n                    return {top: 30, right: 30, bottom: 30, left: 60}\n                }\n            }\n        },\n        watch: {\n            displayProperty() {\n                this.draw()\n            },\n            rawData() {\n                this.draw()\n            },\n            startYear() {\n                this.draw()\n            },\n            endYear() {\n                this.draw()\n            },\n            width() {\n                this.draw()\n            },\n            height() {\n                this.draw()\n            }\n        },\n        mounted() {\n            this.draw(this.displayProperty)\n        },\n        methods: {\n\n            validProps() {\n                if (this.rawData.length > 0 && this.startYear && this.endYear) return true\n                else return false\n            },\n\n            draw() {\n                if(!this.validProps()){\n                    return\n                }\n                const d3 = this.d3\n                const lodash = this.lodash\n                const margin = this.margin\n                const width = this.width\n                const height = this.height\n                const container = this.$el\n                const innerWidth =  width - margin.left - margin.right\n                const innerHeight = height - margin.top - margin.bottom\n                const rawData = JSON.parse(JSON.stringify(this.rawData))\n                const displayProperty = this.displayProperty\n                const startYear = this.startYear\n                const endYear = this.endYear\n\n                /// remove previous dom objects in container\n                while (container.firstChild) {\n                    container.removeChild(container.firstChild)\n                }\n\n                let svg = d3.select(container)\n                    .append(\"svg\")\n                    .attr(\"width\", width)\n                    .attr(\"height\", height)\n                    .append(\"g\")\n                    .attr(\"transform\",\n                        \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n                // labels of row and columns\n                let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n\n                // copy rawData and sort it in order of date\n                let sortedRawData = lodash.orderBy(rawData, ['date'])\n\n                // group by YYYY-MM then get max/min temperature\n                this.processedData = lodash.chain(sortedRawData).groupBy((d) => {\n                    return d.date.split('-')[0] + '-' + d.date.split('-')[1]\n                }).map((val, key) => {\n                    let max = Math.max.apply(Math, val.map(function (d) {\n                        return d.max_temperature\n                    }))\n                    let min = Math.min.apply(Math, val.map(function (d) {\n                        return d.min_temperature\n                    }))\n                    return {\n                        date: key,\n                        max_temperature: max,\n                        min_temperature: min\n                    }\n                }).value()\n\n                this.groupedData = lodash.groupBy(sortedRawData, (el) => {\n                    return el.date.split('-')[0] + '-' + el.date.split('-')[1]\n                })\n\n                // dynamic labels for years\n                let years = []\n                for (let i = startYear; i <= endYear; i++) {\n                    years.push(i.toString())\n                }\n\n                // build X scales and axis:\n                let x = d3.scaleBand()\n                    .range([0, innerWidth - 50])\n                    .domain(years)\n                    .padding(0.1);\n                svg.append(\"g\")\n                    .call(d3.axisTop(x))\n\n                // build Y scales and axis:\n                let y = d3.scaleBand()\n                    .range([0, innerHeight])\n                    .domain(months)\n                    .padding(0.1);\n                svg.append(\"g\")\n                    .call(d3.axisLeft(y));\n\n                // build color scale\n                let colors = [\"#2c7bb6\", \"#00a6ca\", \"#00ccbc\", \"#90eb9d\", \"#ffff8c\",\n                    \"#f9d057\", \"#f29e2e\", \"#e76818\", \"#d7191c\"]\n                let temperatureRange = [0, 40]\n                let colorScale = d3.scaleQuantize()\n                    .domain(temperatureRange)\n                    .range(colors)\n\n\n                // tooltip\n                // remove previous tips\n                d3.select(\".d3-tip\").remove();\n\n                let tip = d3.tip().attr('class', 'd3-tip').html(function (d) {\n                    return \"Date: \" + d.date + \"Max: \" + d.max_temperature + \" &#8451 Min: \" + d.min_temperature + \" &#8451\"\n                });\n\n\n\n                // use processedData in the specified year range\n                // draw rect\n                let dataToDraw = lodash.filter(this.processedData, (el) => {\n                    if (parseInt(el.date.split('-')[0]) <= this.endYear && parseInt(el.date.split('-')[0]) >= this.startYear) return true\n                    else return false\n                })\n                let vm = this\n                svg.call(tip)\n                svg.selectAll()\n                    .data(dataToDraw)\n                    .enter()\n                    .append(\"rect\")\n                    .attr(\"x\", function (d) {\n                        return x(d.date.split('-')[0])\n                    })\n                    .attr(\"y\", function (d) {\n                        return y(months[parseInt(d.date.split('-')[1]) - 1])\n                    })\n                    .attr(\"width\", x.bandwidth())\n                    .attr(\"height\", y.bandwidth())\n                    .style(\"fill\", function (d) {\n                        return colorScale(d[displayProperty])\n                    })\n                    .on('mouseover', tip.show)\n                    .on('mouseout', tip.hide)\n\n                // legend\n                let legendSquareLength = 15\n\n\n                // add dummy data to the first element\n                let tempRange = temperatureRange.slice()\n                tempRange.unshift(null)\n\n                let colorRange = colors.slice()\n                colorRange.unshift(null)\n\n                svg.append(\"g\")\n                    .attr(\"class\", \"legend\")\n                svg.selectAll(\".legend\")\n                    .data(colorRange)\n                    .enter()\n                    .append(\"rect\")\n                    .attr(\"x\", innerWidth - legendSquareLength - margin.right)\n                    .attr(\"y\", (d, i) => {\n                        return (i - 1) * legendSquareLength\n                    })\n                    .attr(\"width\", legendSquareLength)\n                    .attr(\"height\", legendSquareLength)\n                    .style(\"fill\", (d, i) => {\n                        return colorRange[i]\n                    })\n                svg.selectAll(\".legend\")\n                    .data(tempRange)\n                    .enter()\n                    .append('text')\n                    .attr(\"x\", innerWidth - margin.right + 3)\n                    .attr(\"y\", (d, i) => {\n                        return (i - 1) * legendSquareLength * colors.length + 3\n                    })\n                    .attr(\"style\", \"font-size:10px\")\n                    .html((d, i) => {\n                        return d + \" &#8451\"\n                    })\n\n\n                // nested line graph:\n                let x2 = d3.scaleBand()\n                    .range([0, x.bandwidth()])\n                    .padding(0.1)\n\n                let y2 = d3.scaleBand()\n                    .range([0, y.bandwidth()])\n                    .domain(lodash.range(40))\n                    .padding(0.1)\n\n                let maxTempLine = d3.line()\n                    .x(function (d, i) {\n                        x2.domain(vm.lodash.range(d.numOfDays))\n                        return x2(i)\n                    })\n                    .y(function (d) {\n                        return y2(d.max_temperature)\n                    })\n\n                let minTempLine = d3.line()\n                    .x(function (d, i) {\n                        x2.domain(vm.lodash.range(d.numOfDays))\n                        return x2(i)\n                    })\n                    .y(function (d) {\n                        return y2(d.min_temperature)\n                    })\n\n                svg.selectAll()\n                    .data(dataToDraw)\n                    .enter()\n                    .append(\"g\")\n                    .attr(\"transform\", (d, i) => {\n                        let coordinate = {\n                            x: x(d.date.split('-')[0]),\n                            y: y(months[parseInt(d.date.split('-')[1]) - 1]) + y.bandwidth()\n                        }\n                        return \"translate(\" + coordinate.x + \",\" + coordinate.y + \") \"\n                    })\n                    .append(\"g\")\n                    .append(\"path\")\n                    .attr(\"transform\", \"scale(1,-1)\")\n                    .attr(\"fill\", \"none\")\n                    .attr(\"stroke\", \"blue\")\n                    .attr(\"stroke-width\", \"2px\")\n                    .attr('d', (d) => {\n                        let data = lodash.chain(this.groupedData[d.date]).map(el => {\n                            el.numOfDays = this.groupedData[d.date].length\n                            return el\n                        }).value()\n                        return maxTempLine(data)\n                    })\n\n\n                svg.selectAll()\n                    .data(dataToDraw)\n                    .enter()\n                    .append(\"g\")\n                    .attr(\"transform\", (d, i) => {\n                        let coordinate = {\n                            x: x(d.date.split('-')[0]),\n                            y: y(months[parseInt(d.date.split('-')[1]) - 1]) + y.bandwidth()\n                        }\n                        return \"translate(\" + coordinate.x + \",\" + coordinate.y + \") \"\n                    })\n                    .append(\"g\")\n                    .append(\"path\")\n                    .attr(\"transform\", \"scale(1,-1)\")\n                    .attr(\"fill\", \"none\")\n                    .attr(\"stroke\", \"#99b3ff\")\n                    .attr(\"stroke-width\", \"2px\")\n                    .attr('d', (d) => {\n                        let data = lodash.chain(this.groupedData[d.date]).map(el => {\n                            el.numOfDays = this.groupedData[d.date].length\n                            return el\n                        }).value()\n                        return minTempLine(data)\n                    })\n\n            }\n        }\n\n    }\n</script>\n\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImprovedTemperatureHeatMap.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImprovedTemperatureHeatMap.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ImprovedTemperatureHeatMap.vue?vue&type=template&id=f4646330&\"\nimport script from \"./ImprovedTemperatureHeatMap.vue?vue&type=script&lang=js&\"\nexport * from \"./ImprovedTemperatureHeatMap.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n    <v-layout row wrap>\n        <v-flex xs12 pa-1>\n            <v-toolbar color=\"white\" light>\n                <v-toolbar-title>Level 2 Challenge: Improvement of the Year/Month Heatmap</v-toolbar-title>\n                <v-spacer></v-spacer>\n            </v-toolbar>\n        </v-flex>\n        <v-flex xs12 pa-1>\n            <v-card>\n                <v-card-title>\n                    <span class=\"title\">Input Data: {{file}}</span>\n\n                </v-card-title>\n\n                <v-card-text>\n                    <v-text-field\n                            v-model=\"search\"\n                            append-icon=\"search\"\n                            label=\"Search\"\n                            single-line\n                            hide-details\n                            outline\n\n                    ></v-text-field>\n                    <v-data-table\n                            :headers=\"headers\"\n                            :items=\"rawData\"\n                            :search=\"search\"\n                    >\n                        <template v-slot:items=\"props\">\n                            <td class=\"text-xs-center\">{{ props.item.date }}</td>\n                            <td class=\"text-xs-center\">{{ props.item.max_temperature }}</td>\n                            <td class=\"text-xs-center\">{{ props.item.min_temperature }}</td>\n\n                        </template>\n                    </v-data-table>\n                </v-card-text>\n            </v-card>\n        </v-flex>\n        <v-flex xs12 pa-1>\n            <v-card>\n                <v-card-title>\n                    <div>\n                        <h3 class=\"title mb-0\">Year/Month Heatmap</h3>\n                        <v-label>Display Value: {{displayProperty}}</v-label>\n                        <br>\n                        <v-label>Year Range: {{startYear}} - {{endYear}}</v-label>\n\n\n                        <v-layout row wrap>\n                            <v-flex xs12 sm5 md4 pa-1>\n                                <v-text-field\n                                        label=\"Start Year\"\n                                        outline\n                                        v-model=\"input.startYear\"\n                                        type=\"number\"\n                                        min=\"1900\"\n                                        step=\"1\"\n                                        max=\"2100\"\n                                ></v-text-field>\n                            </v-flex>\n                            <v-flex xs12 sm5 md4 pa-1>\n                                <v-text-field\n                                        label=\"End Year\"\n                                        outline\n                                        v-model=\"input.endYear\"\n                                        type=\"number\"\n                                        min=\"1900\"\n                                        step=\"1\"\n                                        max=\"2100\"\n                                ></v-text-field>\n                            </v-flex>\n                            <v-flex xs6 sm2 md3 pa-1>\n                                <v-btn @click=\"changeYearRange\">\n                                    Apply\n                                </v-btn>\n                            </v-flex>\n                        </v-layout>\n\n                    </div>\n\n                </v-card-title>\n\n\n                <v-card-actions>\n                    <v-btn color=\"error\" @click=\"changeDisplayProperty('max_temperature')\">MAX Temperature</v-btn>\n                    <v-btn color=\"primary\" @click=\"changeDisplayProperty('min_temperature')\">MIN Temperature</v-btn>\n                </v-card-actions>\n\n                <v-card-text ref=\"heatMapContainer2\">\n                    <improved-temperature-heat-map :rawData=\"rawData\" :display-property=\"displayProperty\"\n                                                   :startYear=\"startYear\" :endYear=\"endYear\"\n                                                   :height=\"container.height\" :width=\"container.width\"\n                    >\n\n                    </improved-temperature-heat-map>\n                </v-card-text>\n            </v-card>\n        </v-flex>\n\n    </v-layout>\n\n</template>\n\n<script>\n    import ImprovedTemperatureHeatMap from '../components/ImprovedTemperatureHeatMap'\n\n    export default {\n        name: \"level2\",\n        components: {ImprovedTemperatureHeatMap},\n        data: () => {\n            return {\n                search: '',\n                headers: [\n                    {text: 'Date', value: 'date', align: 'center'},\n                    {text: 'Max Temperature', value: 'max_temperature', align: 'center'},\n                    {text: 'Min Temperature', value: 'min_temperature', align: 'center'},\n                ],\n                rawData: [],\n                file: \"data/temperature_daily.csv\",\n                displayProperty: 'max_temperature',\n                startYear: 2008,\n                endYear: 2017,\n                input: {\n                    startYear: 2000,\n                    endYear: 2017\n                },\n\n                container: {\n                    width: 0,\n                    height: 0\n                },\n\n\n                // for resizing diagram only after resizing is finished\n                resizeID: null\n            }\n        },\n\n        async mounted() {\n            this.rawData = await this.d3.csv(this.file)\n            window.addEventListener('resize', this.onResize)\n            this.initContainerSize()\n        },\n        beforeDestroy() {\n            window.removeEventListener('resize', this.onResize)\n        },\n        methods: {\n            changeDisplayProperty(val) {\n                this.displayProperty = val\n            },\n            changeYearRange() {\n                this.startYear = parseInt(this.input.startYear)\n                this.endYear = parseInt(this.input.endYear)\n\n            },\n            onResize(e) {\n                clearTimeout(this.resizeID);\n                this.resizeID = setTimeout(this.initContainerSize, 500)\n\n            },\n            initContainerSize() {\n                this.container.width = this.$refs.heatMapContainer2.clientWidth\n                this.container.height = parseInt(this.container.width * 0.8)\n            }\n\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./level2.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./level2.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./level2.vue?vue&type=template&id=2cff5b71&scoped=true&\"\nimport script from \"./level2.vue?vue&type=script&lang=js&\"\nexport * from \"./level2.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2cff5b71\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!/Users/noah/Git/HKUST-VisLab-Coding-Challenge/node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib'\nimport { VCard } from 'vuetify/lib'\nimport { VCardActions } from 'vuetify/lib'\nimport { VCardText } from 'vuetify/lib'\nimport { VCardTitle } from 'vuetify/lib'\nimport { VDataTable } from 'vuetify/lib'\nimport { VFlex } from 'vuetify/lib'\nimport { VLabel } from 'vuetify/lib'\nimport { VLayout } from 'vuetify/lib'\nimport { VSpacer } from 'vuetify/lib'\nimport { VTextField } from 'vuetify/lib'\nimport { VToolbar } from 'vuetify/lib'\nimport { VToolbarTitle } from 'vuetify/lib'\ninstallComponents(component, {VBtn,VCard,VCardActions,VCardText,VCardTitle,VDataTable,VFlex,VLabel,VLayout,VSpacer,VTextField,VToolbar,VToolbarTitle})\n"],"sourceRoot":""}