{"version":3,"sources":["webpack:///./src/views/level1.vue?5b9e","webpack:///./src/components/TemperatureHeatMap.vue?ac6b","webpack:///src/components/TemperatureHeatMap.vue","webpack:///./src/components/TemperatureHeatMap.vue?97f7","webpack:///./src/components/TemperatureHeatMap.vue","webpack:///src/views/level1.vue","webpack:///./src/views/level1.vue?115f","webpack:///./src/views/level1.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","row","wrap","xs12","pa-1","color","light","_v","staticClass","_s","file","append-icon","label","single-line","hide-details","outline","model","value","callback","$$v","search","expression","headers","items","rawData","scopedSlots","_u","key","fn","props","item","date","max_temperature","min_temperature","displayProperty","on","click","$event","changeDisplayProperty","ref","height","container","width","display-property","staticRenderFns","TemperatureHeatMapvue_type_template_id_618ff1fc_render","staticStyle","overflow","TemperatureHeatMapvue_type_template_id_618ff1fc_staticRenderFns","TemperatureHeatMapvue_type_script_lang_js_","name","data","processedData","type","Array","required","String","Number","default","margin","Object","top","right","bottom","left","watch","draw","mounted","methods","validProps","length","d3","lodash","$el","innerWidth","innerHeight","JSON","parse","stringify_default","firstChild","removeChild","svg","select","append","attr","months","sortedRawData","orderBy","chain","groupBy","d","split","map","val","max","Math","apply","min","console","log","startYear","parse_int_default","endYear","years","i","push","toString","x","scaleBand","range","domain","padding","call","axisTop","y","axisLeft","colorScale","scaleQuantize","remove","tip","html","selectAll","enter","bandwidth","style","show","hide","components_TemperatureHeatMapvue_type_script_lang_js_","component","componentNormalizer","TemperatureHeatMap","level1vue_type_script_lang_js_","components","text","align","resizeID","_mounted","asyncToGenerator","regeneratorRuntime","mark","_callee","_context","prev","next","csv","sent","window","addEventListener","onResize","initContainerSize","stop","arguments","beforeDestroy","removeEventListener","e","clearTimeout","setTimeout","$refs","heatMapContainer","clientWidth","views_level1vue_type_script_lang_js_","level1_component","__webpack_exports__","installComponents_default","VBtn","VCard","VCardActions","components_VCard","VCardText","VCardTitle","VDataTable","VFlex","VLabel","VLayout","VSpacer","VGrid","VTextField","VToolbar","VToolbarTitle","components_VToolbar"],"mappings":"uHAAA,IAAAA,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,YAAsBE,MAAA,CAAOC,IAAA,GAAAC,KAAA,KAAoB,CAAAJ,EAAA,UAAeE,MAAA,CAAOG,KAAA,GAAAC,OAAA,KAAqB,CAAAN,EAAA,aAAkBE,MAAA,CAAOK,MAAA,QAAAC,MAAA,KAA4B,CAAAR,EAAA,mBAAAJ,EAAAa,GAAA,2CAAAT,EAAA,oBAAAA,EAAA,UAA8GE,MAAA,CAAOG,KAAA,GAAAC,OAAA,KAAqB,CAAAN,EAAA,UAAAA,EAAA,gBAAAA,EAAA,QAA6CU,YAAA,SAAoB,CAAAd,EAAAa,GAAA,eAAAb,EAAAe,GAAAf,EAAAgB,WAAAZ,EAAA,eAAAA,EAAA,gBAAmFE,MAAA,CAAOW,cAAA,SAAAC,MAAA,SAAAC,cAAA,GAAAC,eAAA,GAAAC,QAAA,IAAwFC,MAAA,CAAQC,MAAAvB,EAAA,OAAAwB,SAAA,SAAAC,GAA4CzB,EAAA0B,OAAAD,GAAeE,WAAA,YAAsBvB,EAAA,gBAAqBE,MAAA,CAAOsB,QAAA5B,EAAA4B,QAAAC,MAAA7B,EAAA8B,QAAAJ,OAAA1B,EAAA0B,QAA8DK,YAAA/B,EAAAgC,GAAA,EAAsBC,IAAA,QAAAC,GAAA,SAAAC,GAA+B,OAAA/B,EAAA,MAAiBU,YAAA,kBAA6B,CAAAd,EAAAa,GAAAb,EAAAe,GAAAoB,EAAAC,KAAAC,SAAAjC,EAAA,MAA6CU,YAAA,kBAA6B,CAAAd,EAAAa,GAAAb,EAAAe,GAAAoB,EAAAC,KAAAE,oBAAAlC,EAAA,MAAwDU,YAAA,kBAA6B,CAAAd,EAAAa,GAAAb,EAAAe,GAAAoB,EAAAC,KAAAG,4BAAoD,WAAAnC,EAAA,UAA2BE,MAAA,CAAOG,KAAA,GAAAC,OAAA,KAAqB,CAAAN,EAAA,UAAAA,EAAA,gBAAAA,EAAA,OAAAA,EAAA,MAAqDU,YAAA,cAAyB,CAAAd,EAAAa,GAAA,wBAAAT,EAAA,WAAAJ,EAAAa,GAAA,kBAAAb,EAAAe,GAAAf,EAAAwC,qBAAA,KAAApC,EAAA,kBAAAA,EAAA,SAA8IE,MAAA,CAAOK,MAAA,SAAgB8B,GAAA,CAAKC,MAAA,SAAAC,GAAyB,OAAA3C,EAAA4C,sBAAA,sBAAsD,CAAA5C,EAAAa,GAAA,qBAAAT,EAAA,SAA0CE,MAAA,CAAOK,MAAA,WAAkB8B,GAAA,CAAKC,MAAA,SAAAC,GAAyB,OAAA3C,EAAA4C,sBAAA,sBAAsD,CAAA5C,EAAAa,GAAA,yBAAAT,EAAA,eAAoDyC,IAAA,oBAAuB,CAAAzC,EAAA,wBAA6BE,MAAA,CAAOwC,OAAA9C,EAAA+C,UAAAD,OAAAE,MAAAhD,EAAA+C,UAAAC,MAAAlB,QAAA9B,EAAA8B,QAAAmB,mBAAAjD,EAAAwC,oBAAwH,gBAC50DU,EAAA,gDCDIC,EAAM,WAAgB,IAAAnD,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBgD,YAAA,CAAaC,SAAA,aACnHC,EAAe,8CCMnBC,aAAA,CACAC,KAAA,qBACAC,KAAA,WACA,OACAC,cAAA,OAGAvB,MAAA,CACAL,QAAA,CACA6B,KAAAC,MACAC,UAAA,GAEArB,gBAAA,CACAmB,KAAAG,OACAD,UAAA,GAEAb,MAAA,CACAW,KAAAI,OACAC,QAAA,WACA,aAGAlB,OAAA,CACAa,KAAAI,OACAC,QAAA,WACA,aAGAC,OAAA,CACAN,KAAAO,OACAF,QAAA,WACA,OAAAG,IAAA,GAAAC,MAAA,GAAAC,OAAA,GAAAC,KAAA,OAIAC,MAAA,CACA/B,gBADA,WAEAvC,KAAAuE,QAEA1C,QAJA,WAKA7B,KAAAuE,QAEAxB,MAPA,WAQA/C,KAAAuE,QAEA1B,OAVA,WAWA7C,KAAAuE,SAGAC,QAjDA,WAkDAxE,KAAAuE,QAEAE,QAAA,CAEAC,WAFA,WAGA,OAAA1E,KAAA6B,QAAA8C,OAAA,GAIAJ,KAPA,WAQA,GAAAvE,KAAA0E,aAAA,CAGA,IAAAE,EAAA5E,KAAA4E,GACAC,EAAA7E,KAAA6E,OACAb,EAAAhE,KAAAgE,OACAjB,EAAA/C,KAAA+C,MACAF,EAAA7C,KAAA6C,OACAC,EAAA9C,KAAA8E,IACAC,EAAAhC,EAAAiB,EAAAK,KAAAL,EAAAG,MACAa,EAAAnC,EAAAmB,EAAAE,IAAAF,EAAAI,OACAvC,EAAAoD,KAAAC,MAAAC,IAAAnF,KAAA6B,UACAU,EAAAvC,KAAAuC,gBAIA,MAAAO,EAAAsC,WACAtC,EAAAuC,YAAAvC,EAAAsC,YAGA,IAAAE,EAAAV,EAAAW,OAAAzC,GACA0C,OAAA,OACAC,KAAA,QAAA1C,GACA0C,KAAA,SAAA5C,GACA2C,OAAA,KACAC,KAAA,YACA,aAAAzB,EAAAK,KAAA,IAAAL,EAAAE,IAAA,KAGAwB,EAAA,gHAGAC,EAAAd,EAAAe,QAAA/D,EAAA,UAGA7B,KAAAyD,cAAAoB,EAAAgB,MAAAF,GAAAG,QAAA,SAAAC,GACA,OAAAA,EAAA3D,KAAA4D,MAAA,YAAAD,EAAA3D,KAAA4D,MAAA,UACAC,IAAA,SAAAC,EAAAlE,GACA,IAAAmE,EAAAC,KAAAD,IAAAE,MAAAD,KAAAF,EAAAD,IAAA,SAAAF,GACA,OAAAA,EAAA1D,mBAEAiE,EAAAF,KAAAE,IAAAD,MAAAD,KAAAF,EAAAD,IAAA,SAAAF,GACA,OAAAA,EAAAzD,mBAEA,OACAF,KAAAJ,EACAK,gBAAA8D,EACA7D,gBAAAgE,KAEAhF,QAEAiF,QAAAC,IAAA,gBAAAxG,KAAAyD,eAGA8C,QAAAC,IAAAb,EAAA,IAKA,IAJA,IAAAc,EAAAC,IAAAf,EAAA,GAAAvD,KAAA4D,MAAA,SACAW,EAAAD,IAAAf,IAAAhB,OAAA,GAAAvC,KAAA4D,MAAA,SAEAY,EAAA,GACAC,EAAAJ,EAAAI,GAAAF,EAAAE,IACAD,EAAAE,KAAAD,EAAAE,YAIA,IAAAC,EAAApC,EAAAqC,YACAC,MAAA,GAAAnC,IACAoC,OAAAP,GACAQ,QAAA,IACA9B,EAAAE,OAAA,KACA6B,KAAAzC,EAAA0C,QAAAN,IAGA,IAAAO,EAAA3C,EAAAqC,YACAC,MAAA,GAAAlC,IACAmC,OAAAzB,GACA0B,QAAA,IACA9B,EAAAE,OAAA,KACA6B,KAAAzC,EAAA4C,SAAAD,IAGA,IAAAE,EAAA7C,EAAA8C,gBACAP,OAAA,QACAD,MAAA,mDACA,0CAKAtC,EAAAW,OAAA,WAAAoC,SACA,IAAAC,EAAAhD,EAAAgD,MAAAnC,KAAA,kBAAAoC,KAAA,SAAA9B,GACA,eAAAA,EAAA3D,KAAA,QAAA2D,EAAA1D,gBAAA,gBAAA0D,EAAAzD,gBAAA,YAGAgD,EAAA+B,KAAAO,GACAtC,EAAAwC,YACAtE,KAAAxD,KAAAyD,eACAsE,QACAvC,OAAA,QACAC,KAAA,aAAAM,GACA,OAAAiB,EAAAjB,EAAA3D,KAAA4D,MAAA,WAEAP,KAAA,aAAAM,GACA,OAAAwB,EAAA7B,EAAAgB,IAAAX,EAAA3D,KAAA4D,MAAA,eAEAP,KAAA,QAAAuB,EAAAgB,aACAvC,KAAA,SAAA8B,EAAAS,aACAC,MAAA,gBAAAlC,GACA,OAAA0B,EAAA1B,EAAAxD,MAEAC,GAAA,YAAAoF,EAAAM,MACA1F,GAAA,WAAAoF,EAAAO,WCjL4YC,EAAA,cCO5YC,EAAgBpE,OAAAqE,EAAA,KAAArE,CACdmE,EACAlF,EACAG,GACF,EACA,KACA,KACA,MAIekF,EAAAF,UCmDfG,EAAA,CACAjF,KAAA,SACAkF,WAAA,CAAAF,sBACA/E,KAAA,WACA,OACA/B,OAAA,GACAE,QAAA,CACA,CAAA+G,KAAA,OAAApH,MAAA,OAAAqH,MAAA,UACA,CAAAD,KAAA,kBAAApH,MAAA,kBAAAqH,MAAA,UACA,CAAAD,KAAA,kBAAApH,MAAA,kBAAAqH,MAAA,WAEA9G,QAAA,GACAd,KAAA,6BACAwB,gBAAA,kBACAO,UAAA,CACAC,MAAA,EACAF,OAAA,GAKA+F,SAAA,OAGApE,QAxBA,eAAAqE,EAAA5E,OAAA6E,EAAA,KAAA7E,CAAA8E,mBAAAC,KAAA,SAAAC,IAAA,OAAAF,mBAAAxI,KAAA,SAAA2I,GAAA,eAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAyBApJ,KAAA4E,GAAAyE,IAAArJ,KAAAe,MAzBA,OAyBAf,KAAA6B,QAzBAqH,EAAAI,KA0BAC,OAAAC,iBAAA,SAAAxJ,KAAAyJ,UACAzJ,KAAA0J,oBA3BA,wBAAAR,EAAAS,SAAAV,EAAAjJ,SAAA,SAAAwE,IAAA,OAAAqE,EAAAxC,MAAArG,KAAA4J,WAAA,OAAApF,EAAA,GA6BAqF,cA7BA,WA8BAN,OAAAO,oBAAA,SAAA9J,KAAAyJ,WAEAhF,QAAA,CACA9B,sBADA,SACAuD,GACAlG,KAAAuC,gBAAA2D,GAEAuD,SAJA,SAIAM,GACAC,aAAAhK,KAAA4I,UACA5I,KAAA4I,SAAAqB,WAAAjK,KAAA0J,kBAAA,MAGAA,kBATA,WAUA1J,KAAA8C,UAAAC,MAAA/C,KAAAkK,MAAAC,iBAAAC,YACApK,KAAA8C,UAAAD,OAAA6D,IAAA,GAAA1G,KAAA8C,UAAAC,UChHgYsH,EAAA,uKCO5XC,EAAYrG,OAAAqE,EAAA,KAAArE,CACdoG,EACAvK,EACAmD,GACF,EACA,KACA,WACA,MAIesH,EAAA,WAAAD,EAAiB,QAiBhCE,IAAkBF,EAAS,CAAGG,OAAA,KAAKC,QAAA,KAAMC,aAAAC,EAAA,KAAaC,UAAAD,EAAA,KAAUE,aAAA,KAAWC,aAAA,KAAWC,QAAA,KAAMC,SAAA,KAAOC,UAAA,KAAQC,QAAAC,EAAA,KAAQC,aAAA,KAAWC,WAAA,KAASC,cAAAC,EAAA","file":"js/chunk-2d21ee52.5e1e55c5.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\",\"pa-1\":\"\"}},[_c('v-toolbar',{attrs:{\"color\":\"white\",\"light\":\"\"}},[_c('v-toolbar-title',[_vm._v(\"Level 1 Challenge: Year/Month Heatmap\")]),_c('v-spacer')],1)],1),_c('v-flex',{attrs:{\"xs12\":\"\",\"pa-1\":\"\"}},[_c('v-card',[_c('v-card-title',[_c('span',{staticClass:\"title\"},[_vm._v(\"Input Data: \"+_vm._s(_vm.file))])]),_c('v-card-text',[_c('v-text-field',{attrs:{\"append-icon\":\"search\",\"label\":\"Search\",\"single-line\":\"\",\"hide-details\":\"\",\"outline\":\"\"},model:{value:(_vm.search),callback:function ($$v) {_vm.search=$$v},expression:\"search\"}}),_c('v-data-table',{attrs:{\"headers\":_vm.headers,\"items\":_vm.rawData,\"search\":_vm.search},scopedSlots:_vm._u([{key:\"items\",fn:function(props){return [_c('td',{staticClass:\"text-xs-center\"},[_vm._v(_vm._s(props.item.date))]),_c('td',{staticClass:\"text-xs-center\"},[_vm._v(_vm._s(props.item.max_temperature))]),_c('td',{staticClass:\"text-xs-center\"},[_vm._v(_vm._s(props.item.min_temperature))])]}}])})],1)],1)],1),_c('v-flex',{attrs:{\"xs12\":\"\",\"pa-1\":\"\"}},[_c('v-card',[_c('v-card-title',[_c('div',[_c('h3',{staticClass:\"title mb-0\"},[_vm._v(\"Year/Month Heatmap\")]),_c('v-label',[_vm._v(\"Display Value: \"+_vm._s(_vm.displayProperty))])],1)]),_c('v-card-actions',[_c('v-btn',{attrs:{\"color\":\"error\"},on:{\"click\":function($event){return _vm.changeDisplayProperty('max_temperature')}}},[_vm._v(\"MAX Temperature\")]),_c('v-btn',{attrs:{\"color\":\"primary\"},on:{\"click\":function($event){return _vm.changeDisplayProperty('min_temperature')}}},[_vm._v(\"MIN Temperature\")])],1),_c('v-card-text',{ref:\"heatMapContainer\"},[_c('temperature-heat-map',{attrs:{\"height\":_vm.container.height,\"width\":_vm.container.width,\"rawData\":_vm.rawData,\"display-property\":_vm.displayProperty}})],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"overflow\":\"scroll\"}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div style=\"overflow: scroll;\"></div>\n</template>\n\n\n<script>\n\n    export default {\n        name: \"TemperatureHeatMap\",\n        data: () => {\n            return {\n                processedData: null\n            }\n        },\n        props: {\n            rawData: {\n                type: Array,\n                required: true\n            },\n            displayProperty: {\n                type: String,\n                required: true\n            },\n            width: {\n                type: Number,\n                default: () => {\n                    return 500\n                }\n            },\n            height: {\n                type: Number,\n                default: () => {\n                    return 500\n                }\n            },\n            margin: {\n                type: Object,\n                default: () => {\n                    return {top: 30, right: 30, bottom: 30, left: 60}\n                }\n            }\n        },\n        watch: {\n            displayProperty() {\n                this.draw()\n            },\n            rawData() {\n                this.draw()\n            },\n            width() {\n                this.draw()\n            },\n            height() {\n                this.draw()\n            }\n        },\n        mounted() {\n            this.draw()\n        },\n        methods: {\n\n            validProps(){\n              if(this.rawData.length>0) return true\n              else return false\n            },\n            // draw chart using processedData\n            draw() {\n                if(!this.validProps()){\n                    return\n                }\n                const d3 = this.d3\n                const lodash = this.lodash\n                const margin = this.margin\n                const width = this.width\n                const height = this.height\n                const container = this.$el\n                const innerWidth =  width - margin.left - margin.right\n                const innerHeight = height - margin.top - margin.bottom\n                const rawData = JSON.parse(JSON.stringify(this.rawData))\n                const displayProperty = this.displayProperty\n\n\n                // remove previous dom objects in container\n                while (container.firstChild) {\n                    container.removeChild(container.firstChild)\n                }\n                \n                let svg = d3.select(container)\n                    .append(\"svg\")\n                    .attr(\"width\", width)\n                    .attr(\"height\", height)\n                    .append(\"g\")\n                    .attr(\"transform\",\n                        \"translate(\" + margin.left + \",\" + margin.top + \")\");\n                \n                // labels of row and columns\n                let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n\n                // copy rawData and sort it in order of date\n                let sortedRawData = lodash.orderBy(rawData, ['date'])\n\n                // group by YYYY-MM then get max/min temperature\n                this.processedData = lodash.chain(sortedRawData).groupBy((d) => {\n                    return d.date.split('-')[0] + '-' + d.date.split('-')[1]\n                }).map((val, key) => {\n                    let max = Math.max.apply(Math, val.map(function (d) {\n                        return d.max_temperature\n                    }))\n                    let min = Math.min.apply(Math, val.map(function (d) {\n                        return d.min_temperature\n                    }))\n                    return {\n                        date: key,\n                        max_temperature: max,\n                        min_temperature: min\n                    }\n                }).value()\n\n                console.log(\"processedData\", this.processedData)\n\n                // dynamic labels for years\n                console.log(sortedRawData[0])\n                let startYear = parseInt(sortedRawData[0].date.split('-')[0])\n                let endYear = parseInt(sortedRawData[sortedRawData.length - 1].date.split('-')[0])\n\n                let years = []\n                for (let i = startYear; i <= endYear; i++) {\n                    years.push(i.toString())\n                }\n\n                // build X scales and axis:\n                let x = d3.scaleBand()\n                    .range([0, innerWidth])\n                    .domain(years)\n                    .padding(0.1);\n                svg.append(\"g\")\n                    .call(d3.axisTop(x))\n\n                // build X scales and axis:\n                let y = d3.scaleBand()\n                    .range([0, innerHeight])\n                    .domain(months)\n                    .padding(0.1);\n                svg.append(\"g\")\n                    .call(d3.axisLeft(y));\n\n                // build color scale\n                let colorScale = d3.scaleQuantize()\n                    .domain([0, 40])\n                    .range([\"#2c7bb6\", \"#00a6ca\", \"#00ccbc\", \"#90eb9d\", \"#ffff8c\",\n                        \"#f9d057\", \"#f29e2e\", \"#e76818\", \"#d7191c\"])\n\n\n                // tooltip\n                // remove previous tips\n                d3.select(\".d3-tip\").remove()\n                let tip = d3.tip().attr('class', 'd3-tip').html(function (d) {\n                    return \"Date: \" + d.date + \"Max: \" + d.max_temperature + \" &#8451 Min: \" + d.min_temperature + \" &#8451\"\n                });\n\n                svg.call(tip)\n                svg.selectAll()\n                    .data(this.processedData)\n                    .enter()\n                    .append(\"rect\")\n                    .attr(\"x\", function (d) {\n                        return x(d.date.split('-')[0])\n                    })\n                    .attr(\"y\", function (d) {\n                        return y(months[parseInt(d.date.split('-')[1]) - 1])\n                    })\n                    .attr(\"width\", x.bandwidth())\n                    .attr(\"height\", y.bandwidth())\n                    .style(\"fill\", function (d) {\n                        return colorScale(d[displayProperty])\n                    })\n                    .on('mouseover', tip.show)\n                    .on('mouseout', tip.hide)\n\n\n            }\n        }\n\n    }\n</script>\n\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TemperatureHeatMap.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TemperatureHeatMap.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TemperatureHeatMap.vue?vue&type=template&id=618ff1fc&\"\nimport script from \"./TemperatureHeatMap.vue?vue&type=script&lang=js&\"\nexport * from \"./TemperatureHeatMap.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n    <v-layout row wrap>\n        <v-flex xs12 pa-1>\n            <v-toolbar color=\"white\" light>\n                <v-toolbar-title>Level 1 Challenge: Year/Month Heatmap</v-toolbar-title>\n                <v-spacer></v-spacer>\n            </v-toolbar>\n        </v-flex>\n        <v-flex xs12 pa-1>\n            <v-card>\n                <v-card-title>\n                    <span class=\"title\">Input Data: {{file}}</span>\n                </v-card-title>\n\n                <v-card-text>\n                    <v-text-field\n                            v-model=\"search\"\n                            append-icon=\"search\"\n                            label=\"Search\"\n                            single-line\n                            hide-details\n                            outline\n\n                    ></v-text-field>\n                    <v-data-table\n                            :headers=\"headers\"\n                            :items=\"rawData\"\n                            :search=\"search\"\n                    >\n                        <template v-slot:items=\"props\">\n                            <td class=\"text-xs-center\">{{ props.item.date }}</td>\n                            <td class=\"text-xs-center\">{{ props.item.max_temperature }}</td>\n                            <td class=\"text-xs-center\">{{ props.item.min_temperature }}</td>\n\n                        </template>\n                    </v-data-table>\n                </v-card-text>\n            </v-card>\n        </v-flex>\n        <v-flex xs12 pa-1>\n            <v-card>\n                <v-card-title>\n                    <div>\n                        <h3 class=\"title mb-0\">Year/Month Heatmap</h3>\n                        <v-label>Display Value: {{displayProperty}}</v-label>\n                    </div>\n\n                </v-card-title>\n\n\n                <v-card-actions>\n                    <v-btn color=\"error\" @click=\"changeDisplayProperty('max_temperature')\">MAX Temperature</v-btn>\n                    <v-btn color=\"primary\" @click=\"changeDisplayProperty('min_temperature')\">MIN Temperature</v-btn>\n                </v-card-actions>\n\n                <v-card-text ref=\"heatMapContainer\">\n                    <temperature-heat-map :height=\"container.height\" :width=\"container.width\" :rawData=\"rawData\"\n                                          :display-property=\"displayProperty\"></temperature-heat-map>\n                </v-card-text>\n            </v-card>\n        </v-flex>\n\n    </v-layout>\n\n</template>\n\n<script>\n    import TemperatureHeatMap from '../components/TemperatureHeatMap'\n\n    export default {\n        name: \"level1\",\n        components: {TemperatureHeatMap},\n        data: () => {\n            return {\n                search: '',\n                headers: [\n                    {text: 'Date', value: 'date', align: 'center'},\n                    {text: 'Max Temperature', value: 'max_temperature', align: 'center'},\n                    {text: 'Min Temperature', value: 'min_temperature', align: 'center'},\n                ],\n                rawData: [],\n                file: \"data/temperature_daily.csv\",\n                displayProperty: 'max_temperature',\n                container: {\n                    width: 0,\n                    height: 0\n                },\n\n\n                // for resizing diagram only after resizing is finished\n                resizeID: null\n            }\n        },\n        async mounted() {\n            this.rawData = await this.d3.csv(this.file)\n            window.addEventListener('resize', this.onResize)\n            this.initContainerSize()\n        },\n        beforeDestroy() {\n            window.removeEventListener('resize', this.onResize)\n        },\n        methods: {\n            changeDisplayProperty(val) {\n                this.displayProperty = val\n            },\n            onResize(e) {\n                clearTimeout(this.resizeID);\n                this.resizeID = setTimeout(this.initContainerSize, 500)\n\n            },\n            initContainerSize() {\n                this.container.width = this.$refs.heatMapContainer.clientWidth\n                this.container.height = parseInt(this.container.width * 0.8)\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./level1.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./level1.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./level1.vue?vue&type=template&id=7d109e46&scoped=true&\"\nimport script from \"./level1.vue?vue&type=script&lang=js&\"\nexport * from \"./level1.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7d109e46\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!/Users/noah/Git/HKUST-VisLab-Coding-Challenge/node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib'\nimport { VCard } from 'vuetify/lib'\nimport { VCardActions } from 'vuetify/lib'\nimport { VCardText } from 'vuetify/lib'\nimport { VCardTitle } from 'vuetify/lib'\nimport { VDataTable } from 'vuetify/lib'\nimport { VFlex } from 'vuetify/lib'\nimport { VLabel } from 'vuetify/lib'\nimport { VLayout } from 'vuetify/lib'\nimport { VSpacer } from 'vuetify/lib'\nimport { VTextField } from 'vuetify/lib'\nimport { VToolbar } from 'vuetify/lib'\nimport { VToolbarTitle } from 'vuetify/lib'\ninstallComponents(component, {VBtn,VCard,VCardActions,VCardText,VCardTitle,VDataTable,VFlex,VLabel,VLayout,VSpacer,VTextField,VToolbar,VToolbarTitle})\n"],"sourceRoot":""}